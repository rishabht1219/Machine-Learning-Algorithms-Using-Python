{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "from random import random\n",
    "from math import exp\n",
    "import pandas as pd\n",
    "from random import seed\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "class Neural_Network:\n",
    "    def __init__(self):\n",
    "        \n",
    "    ## Variable initialization ##\n",
    "    ## self.hidden_layer_neurons = ...\n",
    "        self.W1 = [random() for i in range(4)]\n",
    "        self.W2 = random()\n",
    "        self.B1 = random()\n",
    "        self.B2 = random()\n",
    "    \n",
    "\n",
    "    # sigmoid activation\n",
    "    def sigmoid(self, x):\n",
    "        return 1.0/(1.0+exp(-x))\n",
    "    \n",
    "    # calculate derivative    \n",
    "    def deriv(self,x):\n",
    "        return x*(1-x)\n",
    "    \n",
    "    def forward_prop(self, inp):\n",
    "        #print(\"inp\",inp,\"W1\",self.W1)\n",
    "        out = self.sigmoid(np.dot(inp,self.W1)+self.B1)\n",
    "        inp = out\n",
    "        # output neuron prediction:\n",
    "        pred = self.sigmoid((inp*self.W2)+self.B2)\n",
    "        ## return output of first activation and final predicted output\n",
    "        return out, pred\n",
    "    \n",
    "    def backprop(self,inp, true, pred,learning_rate):\n",
    "        \n",
    "        ## calculate errors:\n",
    "        out = self.sigmoid(np.dot(inp,self.W1)+self.B1)\n",
    "        ## error in output layer: error1 = (true - pred) * derivative(pred)\n",
    "        error1 = (true - pred) * self.deriv(pred)\n",
    "        \n",
    "        ## error in hidden layer: error2 = (weight_k * error_j) * derivative(out)\n",
    "        ## i.e. error2 = self.W2*error1*derivative(self.sigmoid(np.dot(inp,self.W1)+self.B1))\n",
    "        error2 = self.W2*error1*self.deriv(out)\n",
    "        ## if we use multiple hidden layer neurons, the error 2 must be added (if multiple error2 are present)\n",
    "        \n",
    "        errors = [error2,error1] # in order according to the layers\n",
    "        \n",
    "        ## update weights:\n",
    "        \n",
    "        ## please check the shape of the data used below and then do the required:\n",
    "        \n",
    "    ## also check the output shape after update\n",
    "        self.W1 = self.W1 + learning_rate * error2 * inp\n",
    "        self.W2 = self.W2 + learning_rate * error1 * out\n",
    "        self.B1 = self.B1 + learning_rate * error2\n",
    "        self.B2 = self.B2 + learning_rate * error1\n",
    "        return errors\n",
    "    \n",
    "    def train(self, n_epoch, train,l_rate):\n",
    "        for epoch in range(n_epoch):\n",
    "            sum_error = 0\n",
    "            for row in train:\n",
    "                out, pred = self.forward_prop(row[:-1])\n",
    "                expected = row[-1]\n",
    "                sum_error +=(expected - pred)**2\n",
    "                self.backprop(row[:-1], expected,pred,l_rate)\n",
    "            print('>epoch=%d, lrate=%.3f, error=%.3f' % (epoch, l_rate, sum_error))  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ">epoch=0, lrate=0.010, error=73.995\n",
      ">epoch=1, lrate=0.010, error=52.815\n",
      ">epoch=2, lrate=0.010, error=47.540\n",
      ">epoch=3, lrate=0.010, error=46.755\n",
      ">epoch=4, lrate=0.010, error=46.640\n",
      ">epoch=5, lrate=0.010, error=46.604\n",
      ">epoch=6, lrate=0.010, error=46.575\n",
      ">epoch=7, lrate=0.010, error=46.546\n",
      ">epoch=8, lrate=0.010, error=46.515\n",
      ">epoch=9, lrate=0.010, error=46.483\n",
      ">epoch=10, lrate=0.010, error=46.449\n",
      ">epoch=11, lrate=0.010, error=46.414\n",
      ">epoch=12, lrate=0.010, error=46.376\n",
      ">epoch=13, lrate=0.010, error=46.336\n",
      ">epoch=14, lrate=0.010, error=46.294\n",
      ">epoch=15, lrate=0.010, error=46.250\n",
      ">epoch=16, lrate=0.010, error=46.203\n",
      ">epoch=17, lrate=0.010, error=46.154\n",
      ">epoch=18, lrate=0.010, error=46.101\n",
      ">epoch=19, lrate=0.010, error=46.046\n",
      ">epoch=20, lrate=0.010, error=45.987\n",
      ">epoch=21, lrate=0.010, error=45.925\n",
      ">epoch=22, lrate=0.010, error=45.859\n",
      ">epoch=23, lrate=0.010, error=45.789\n",
      ">epoch=24, lrate=0.010, error=45.715\n",
      ">epoch=25, lrate=0.010, error=45.637\n",
      ">epoch=26, lrate=0.010, error=45.555\n",
      ">epoch=27, lrate=0.010, error=45.467\n",
      ">epoch=28, lrate=0.010, error=45.375\n",
      ">epoch=29, lrate=0.010, error=45.278\n",
      ">epoch=30, lrate=0.010, error=45.175\n",
      ">epoch=31, lrate=0.010, error=45.067\n",
      ">epoch=32, lrate=0.010, error=44.952\n",
      ">epoch=33, lrate=0.010, error=44.831\n",
      ">epoch=34, lrate=0.010, error=44.702\n",
      ">epoch=35, lrate=0.010, error=44.565\n",
      ">epoch=36, lrate=0.010, error=44.419\n",
      ">epoch=37, lrate=0.010, error=44.262\n",
      ">epoch=38, lrate=0.010, error=44.094\n",
      ">epoch=39, lrate=0.010, error=43.912\n",
      ">epoch=40, lrate=0.010, error=43.715\n",
      ">epoch=41, lrate=0.010, error=43.500\n",
      ">epoch=42, lrate=0.010, error=43.264\n",
      ">epoch=43, lrate=0.010, error=43.005\n",
      ">epoch=44, lrate=0.010, error=42.719\n",
      ">epoch=45, lrate=0.010, error=42.402\n",
      ">epoch=46, lrate=0.010, error=42.050\n",
      ">epoch=47, lrate=0.010, error=41.658\n",
      ">epoch=48, lrate=0.010, error=41.221\n",
      ">epoch=49, lrate=0.010, error=40.735\n",
      ">epoch=50, lrate=0.010, error=40.196\n",
      ">epoch=51, lrate=0.010, error=39.602\n",
      ">epoch=52, lrate=0.010, error=38.951\n",
      ">epoch=53, lrate=0.010, error=38.247\n",
      ">epoch=54, lrate=0.010, error=37.496\n",
      ">epoch=55, lrate=0.010, error=36.707\n",
      ">epoch=56, lrate=0.010, error=35.893\n",
      ">epoch=57, lrate=0.010, error=35.066\n",
      ">epoch=58, lrate=0.010, error=34.239\n",
      ">epoch=59, lrate=0.010, error=33.424\n",
      ">epoch=60, lrate=0.010, error=32.629\n",
      ">epoch=61, lrate=0.010, error=31.859\n",
      ">epoch=62, lrate=0.010, error=31.119\n",
      ">epoch=63, lrate=0.010, error=30.410\n",
      ">epoch=64, lrate=0.010, error=29.732\n",
      ">epoch=65, lrate=0.010, error=29.083\n",
      ">epoch=66, lrate=0.010, error=28.463\n",
      ">epoch=67, lrate=0.010, error=27.868\n",
      ">epoch=68, lrate=0.010, error=27.296\n",
      ">epoch=69, lrate=0.010, error=26.745\n",
      ">epoch=70, lrate=0.010, error=26.213\n",
      ">epoch=71, lrate=0.010, error=25.697\n",
      ">epoch=72, lrate=0.010, error=25.195\n",
      ">epoch=73, lrate=0.010, error=24.705\n",
      ">epoch=74, lrate=0.010, error=24.225\n",
      ">epoch=75, lrate=0.010, error=23.754\n",
      ">epoch=76, lrate=0.010, error=23.290\n",
      ">epoch=77, lrate=0.010, error=22.832\n",
      ">epoch=78, lrate=0.010, error=22.379\n",
      ">epoch=79, lrate=0.010, error=21.929\n",
      ">epoch=80, lrate=0.010, error=21.483\n",
      ">epoch=81, lrate=0.010, error=21.038\n",
      ">epoch=82, lrate=0.010, error=20.596\n",
      ">epoch=83, lrate=0.010, error=20.154\n",
      ">epoch=84, lrate=0.010, error=19.714\n",
      ">epoch=85, lrate=0.010, error=19.276\n",
      ">epoch=86, lrate=0.010, error=18.838\n",
      ">epoch=87, lrate=0.010, error=18.401\n",
      ">epoch=88, lrate=0.010, error=17.966\n",
      ">epoch=89, lrate=0.010, error=17.533\n",
      ">epoch=90, lrate=0.010, error=17.102\n",
      ">epoch=91, lrate=0.010, error=16.674\n",
      ">epoch=92, lrate=0.010, error=16.249\n",
      ">epoch=93, lrate=0.010, error=15.828\n",
      ">epoch=94, lrate=0.010, error=15.411\n",
      ">epoch=95, lrate=0.010, error=14.999\n",
      ">epoch=96, lrate=0.010, error=14.593\n",
      ">epoch=97, lrate=0.010, error=14.192\n",
      ">epoch=98, lrate=0.010, error=13.798\n",
      ">epoch=99, lrate=0.010, error=13.411\n",
      ">epoch=100, lrate=0.010, error=13.030\n",
      ">epoch=101, lrate=0.010, error=12.658\n",
      ">epoch=102, lrate=0.010, error=12.293\n",
      ">epoch=103, lrate=0.010, error=11.936\n",
      ">epoch=104, lrate=0.010, error=11.587\n",
      ">epoch=105, lrate=0.010, error=11.247\n",
      ">epoch=106, lrate=0.010, error=10.915\n",
      ">epoch=107, lrate=0.010, error=10.592\n",
      ">epoch=108, lrate=0.010, error=10.278\n",
      ">epoch=109, lrate=0.010, error=9.972\n",
      ">epoch=110, lrate=0.010, error=9.674\n",
      ">epoch=111, lrate=0.010, error=9.385\n",
      ">epoch=112, lrate=0.010, error=9.105\n",
      ">epoch=113, lrate=0.010, error=8.832\n",
      ">epoch=114, lrate=0.010, error=8.569\n",
      ">epoch=115, lrate=0.010, error=8.313\n",
      ">epoch=116, lrate=0.010, error=8.065\n",
      ">epoch=117, lrate=0.010, error=7.825\n",
      ">epoch=118, lrate=0.010, error=7.593\n",
      ">epoch=119, lrate=0.010, error=7.368\n",
      ">epoch=120, lrate=0.010, error=7.151\n",
      ">epoch=121, lrate=0.010, error=6.940\n",
      ">epoch=122, lrate=0.010, error=6.737\n",
      ">epoch=123, lrate=0.010, error=6.541\n",
      ">epoch=124, lrate=0.010, error=6.352\n",
      ">epoch=125, lrate=0.010, error=6.168\n",
      ">epoch=126, lrate=0.010, error=5.992\n",
      ">epoch=127, lrate=0.010, error=5.821\n",
      ">epoch=128, lrate=0.010, error=5.657\n",
      ">epoch=129, lrate=0.010, error=5.498\n",
      ">epoch=130, lrate=0.010, error=5.345\n",
      ">epoch=131, lrate=0.010, error=5.197\n",
      ">epoch=132, lrate=0.010, error=5.054\n",
      ">epoch=133, lrate=0.010, error=4.917\n",
      ">epoch=134, lrate=0.010, error=4.784\n",
      ">epoch=135, lrate=0.010, error=4.657\n",
      ">epoch=136, lrate=0.010, error=4.533\n",
      ">epoch=137, lrate=0.010, error=4.415\n",
      ">epoch=138, lrate=0.010, error=4.300\n",
      ">epoch=139, lrate=0.010, error=4.190\n",
      ">epoch=140, lrate=0.010, error=4.084\n",
      ">epoch=141, lrate=0.010, error=3.982\n",
      ">epoch=142, lrate=0.010, error=3.883\n",
      ">epoch=143, lrate=0.010, error=3.788\n",
      ">epoch=144, lrate=0.010, error=3.696\n",
      ">epoch=145, lrate=0.010, error=3.608\n",
      ">epoch=146, lrate=0.010, error=3.523\n",
      ">epoch=147, lrate=0.010, error=3.441\n",
      ">epoch=148, lrate=0.010, error=3.362\n",
      ">epoch=149, lrate=0.010, error=3.286\n",
      ">epoch=150, lrate=0.010, error=3.213\n",
      ">epoch=151, lrate=0.010, error=3.142\n",
      ">epoch=152, lrate=0.010, error=3.074\n",
      ">epoch=153, lrate=0.010, error=3.008\n",
      ">epoch=154, lrate=0.010, error=2.945\n",
      ">epoch=155, lrate=0.010, error=2.884\n",
      ">epoch=156, lrate=0.010, error=2.825\n",
      ">epoch=157, lrate=0.010, error=2.768\n",
      ">epoch=158, lrate=0.010, error=2.713\n",
      ">epoch=159, lrate=0.010, error=2.661\n",
      ">epoch=160, lrate=0.010, error=2.610\n",
      ">epoch=161, lrate=0.010, error=2.561\n",
      ">epoch=162, lrate=0.010, error=2.513\n",
      ">epoch=163, lrate=0.010, error=2.468\n",
      ">epoch=164, lrate=0.010, error=2.424\n",
      ">epoch=165, lrate=0.010, error=2.381\n",
      ">epoch=166, lrate=0.010, error=2.340\n",
      ">epoch=167, lrate=0.010, error=2.300\n",
      ">epoch=168, lrate=0.010, error=2.262\n",
      ">epoch=169, lrate=0.010, error=2.225\n",
      ">epoch=170, lrate=0.010, error=2.189\n",
      ">epoch=171, lrate=0.010, error=2.155\n",
      ">epoch=172, lrate=0.010, error=2.121\n",
      ">epoch=173, lrate=0.010, error=2.089\n",
      ">epoch=174, lrate=0.010, error=2.058\n",
      ">epoch=175, lrate=0.010, error=2.028\n",
      ">epoch=176, lrate=0.010, error=1.999\n",
      ">epoch=177, lrate=0.010, error=1.971\n",
      ">epoch=178, lrate=0.010, error=1.944\n",
      ">epoch=179, lrate=0.010, error=1.917\n",
      ">epoch=180, lrate=0.010, error=1.892\n",
      ">epoch=181, lrate=0.010, error=1.867\n",
      ">epoch=182, lrate=0.010, error=1.843\n",
      ">epoch=183, lrate=0.010, error=1.820\n",
      ">epoch=184, lrate=0.010, error=1.798\n",
      ">epoch=185, lrate=0.010, error=1.776\n",
      ">epoch=186, lrate=0.010, error=1.755\n",
      ">epoch=187, lrate=0.010, error=1.735\n",
      ">epoch=188, lrate=0.010, error=1.715\n",
      ">epoch=189, lrate=0.010, error=1.696\n",
      ">epoch=190, lrate=0.010, error=1.678\n",
      ">epoch=191, lrate=0.010, error=1.660\n",
      ">epoch=192, lrate=0.010, error=1.642\n",
      ">epoch=193, lrate=0.010, error=1.625\n",
      ">epoch=194, lrate=0.010, error=1.609\n",
      ">epoch=195, lrate=0.010, error=1.593\n",
      ">epoch=196, lrate=0.010, error=1.577\n",
      ">epoch=197, lrate=0.010, error=1.562\n",
      ">epoch=198, lrate=0.010, error=1.548\n",
      ">epoch=199, lrate=0.010, error=1.534\n",
      ">epoch=200, lrate=0.010, error=1.520\n",
      ">epoch=201, lrate=0.010, error=1.507\n",
      ">epoch=202, lrate=0.010, error=1.494\n",
      ">epoch=203, lrate=0.010, error=1.481\n",
      ">epoch=204, lrate=0.010, error=1.469\n",
      ">epoch=205, lrate=0.010, error=1.457\n",
      ">epoch=206, lrate=0.010, error=1.445\n",
      ">epoch=207, lrate=0.010, error=1.434\n",
      ">epoch=208, lrate=0.010, error=1.423\n",
      ">epoch=209, lrate=0.010, error=1.412\n",
      ">epoch=210, lrate=0.010, error=1.402\n",
      ">epoch=211, lrate=0.010, error=1.391\n",
      ">epoch=212, lrate=0.010, error=1.381\n",
      ">epoch=213, lrate=0.010, error=1.372\n",
      ">epoch=214, lrate=0.010, error=1.362\n",
      ">epoch=215, lrate=0.010, error=1.353\n",
      ">epoch=216, lrate=0.010, error=1.344\n",
      ">epoch=217, lrate=0.010, error=1.336\n",
      ">epoch=218, lrate=0.010, error=1.327\n",
      ">epoch=219, lrate=0.010, error=1.319\n",
      ">epoch=220, lrate=0.010, error=1.311\n",
      ">epoch=221, lrate=0.010, error=1.303\n",
      ">epoch=222, lrate=0.010, error=1.295\n",
      ">epoch=223, lrate=0.010, error=1.287\n",
      ">epoch=224, lrate=0.010, error=1.280\n",
      ">epoch=225, lrate=0.010, error=1.273\n",
      ">epoch=226, lrate=0.010, error=1.266\n",
      ">epoch=227, lrate=0.010, error=1.259\n",
      ">epoch=228, lrate=0.010, error=1.252\n",
      ">epoch=229, lrate=0.010, error=1.246\n",
      ">epoch=230, lrate=0.010, error=1.239\n",
      ">epoch=231, lrate=0.010, error=1.233\n",
      ">epoch=232, lrate=0.010, error=1.227\n",
      ">epoch=233, lrate=0.010, error=1.221\n",
      ">epoch=234, lrate=0.010, error=1.215\n",
      ">epoch=235, lrate=0.010, error=1.209\n",
      ">epoch=236, lrate=0.010, error=1.203\n",
      ">epoch=237, lrate=0.010, error=1.198\n",
      ">epoch=238, lrate=0.010, error=1.193\n",
      ">epoch=239, lrate=0.010, error=1.187\n",
      ">epoch=240, lrate=0.010, error=1.182\n",
      ">epoch=241, lrate=0.010, error=1.177\n",
      ">epoch=242, lrate=0.010, error=1.172\n",
      ">epoch=243, lrate=0.010, error=1.167\n",
      ">epoch=244, lrate=0.010, error=1.162\n",
      ">epoch=245, lrate=0.010, error=1.158\n",
      ">epoch=246, lrate=0.010, error=1.153\n",
      ">epoch=247, lrate=0.010, error=1.149\n",
      ">epoch=248, lrate=0.010, error=1.144\n",
      ">epoch=249, lrate=0.010, error=1.140\n",
      ">epoch=250, lrate=0.010, error=1.136\n",
      ">epoch=251, lrate=0.010, error=1.131\n",
      ">epoch=252, lrate=0.010, error=1.127\n",
      ">epoch=253, lrate=0.010, error=1.123\n",
      ">epoch=254, lrate=0.010, error=1.119\n",
      ">epoch=255, lrate=0.010, error=1.115\n",
      ">epoch=256, lrate=0.010, error=1.112\n",
      ">epoch=257, lrate=0.010, error=1.108\n",
      ">epoch=258, lrate=0.010, error=1.104\n",
      ">epoch=259, lrate=0.010, error=1.101\n",
      ">epoch=260, lrate=0.010, error=1.097\n",
      ">epoch=261, lrate=0.010, error=1.094\n",
      ">epoch=262, lrate=0.010, error=1.090\n",
      ">epoch=263, lrate=0.010, error=1.087\n",
      ">epoch=264, lrate=0.010, error=1.084\n",
      ">epoch=265, lrate=0.010, error=1.080\n",
      ">epoch=266, lrate=0.010, error=1.077\n",
      ">epoch=267, lrate=0.010, error=1.074\n",
      ">epoch=268, lrate=0.010, error=1.071\n",
      ">epoch=269, lrate=0.010, error=1.068\n",
      ">epoch=270, lrate=0.010, error=1.065\n",
      ">epoch=271, lrate=0.010, error=1.062\n",
      ">epoch=272, lrate=0.010, error=1.059\n",
      ">epoch=273, lrate=0.010, error=1.056\n",
      ">epoch=274, lrate=0.010, error=1.053\n",
      ">epoch=275, lrate=0.010, error=1.051\n",
      ">epoch=276, lrate=0.010, error=1.048\n",
      ">epoch=277, lrate=0.010, error=1.045\n",
      ">epoch=278, lrate=0.010, error=1.043\n",
      ">epoch=279, lrate=0.010, error=1.040\n",
      ">epoch=280, lrate=0.010, error=1.037\n",
      ">epoch=281, lrate=0.010, error=1.035\n",
      ">epoch=282, lrate=0.010, error=1.032\n",
      ">epoch=283, lrate=0.010, error=1.030\n",
      ">epoch=284, lrate=0.010, error=1.028\n",
      ">epoch=285, lrate=0.010, error=1.025\n",
      ">epoch=286, lrate=0.010, error=1.023\n",
      ">epoch=287, lrate=0.010, error=1.021\n",
      ">epoch=288, lrate=0.010, error=1.018\n",
      ">epoch=289, lrate=0.010, error=1.016\n",
      ">epoch=290, lrate=0.010, error=1.014\n",
      ">epoch=291, lrate=0.010, error=1.012\n",
      ">epoch=292, lrate=0.010, error=1.010\n",
      ">epoch=293, lrate=0.010, error=1.007\n",
      ">epoch=294, lrate=0.010, error=1.005\n",
      ">epoch=295, lrate=0.010, error=1.003\n",
      ">epoch=296, lrate=0.010, error=1.001\n",
      ">epoch=297, lrate=0.010, error=0.999\n",
      ">epoch=298, lrate=0.010, error=0.997\n",
      ">epoch=299, lrate=0.010, error=0.995\n",
      ">epoch=300, lrate=0.010, error=0.993\n",
      ">epoch=301, lrate=0.010, error=0.992\n",
      ">epoch=302, lrate=0.010, error=0.990\n",
      ">epoch=303, lrate=0.010, error=0.988\n",
      ">epoch=304, lrate=0.010, error=0.986\n",
      ">epoch=305, lrate=0.010, error=0.984\n",
      ">epoch=306, lrate=0.010, error=0.982\n",
      ">epoch=307, lrate=0.010, error=0.981\n",
      ">epoch=308, lrate=0.010, error=0.979\n",
      ">epoch=309, lrate=0.010, error=0.977\n",
      ">epoch=310, lrate=0.010, error=0.976\n",
      ">epoch=311, lrate=0.010, error=0.974\n",
      ">epoch=312, lrate=0.010, error=0.972\n",
      ">epoch=313, lrate=0.010, error=0.971\n",
      ">epoch=314, lrate=0.010, error=0.969\n",
      ">epoch=315, lrate=0.010, error=0.967\n",
      ">epoch=316, lrate=0.010, error=0.966\n",
      ">epoch=317, lrate=0.010, error=0.964\n",
      ">epoch=318, lrate=0.010, error=0.963\n",
      ">epoch=319, lrate=0.010, error=0.961\n",
      ">epoch=320, lrate=0.010, error=0.960\n",
      ">epoch=321, lrate=0.010, error=0.958\n",
      ">epoch=322, lrate=0.010, error=0.957\n",
      ">epoch=323, lrate=0.010, error=0.955\n",
      ">epoch=324, lrate=0.010, error=0.954\n",
      ">epoch=325, lrate=0.010, error=0.953\n",
      ">epoch=326, lrate=0.010, error=0.951\n",
      ">epoch=327, lrate=0.010, error=0.950\n",
      ">epoch=328, lrate=0.010, error=0.948\n",
      ">epoch=329, lrate=0.010, error=0.947\n",
      ">epoch=330, lrate=0.010, error=0.946\n",
      ">epoch=331, lrate=0.010, error=0.944\n",
      ">epoch=332, lrate=0.010, error=0.943\n",
      ">epoch=333, lrate=0.010, error=0.942\n",
      ">epoch=334, lrate=0.010, error=0.941\n",
      ">epoch=335, lrate=0.010, error=0.939\n",
      ">epoch=336, lrate=0.010, error=0.938\n",
      ">epoch=337, lrate=0.010, error=0.937\n",
      ">epoch=338, lrate=0.010, error=0.936\n",
      ">epoch=339, lrate=0.010, error=0.934\n",
      ">epoch=340, lrate=0.010, error=0.933\n",
      ">epoch=341, lrate=0.010, error=0.932\n",
      ">epoch=342, lrate=0.010, error=0.931\n",
      ">epoch=343, lrate=0.010, error=0.930\n",
      ">epoch=344, lrate=0.010, error=0.929\n",
      ">epoch=345, lrate=0.010, error=0.928\n",
      ">epoch=346, lrate=0.010, error=0.926\n",
      ">epoch=347, lrate=0.010, error=0.925\n",
      ">epoch=348, lrate=0.010, error=0.924\n",
      ">epoch=349, lrate=0.010, error=0.923\n",
      ">epoch=350, lrate=0.010, error=0.922\n",
      ">epoch=351, lrate=0.010, error=0.921\n",
      ">epoch=352, lrate=0.010, error=0.920\n",
      ">epoch=353, lrate=0.010, error=0.919\n",
      ">epoch=354, lrate=0.010, error=0.918\n",
      ">epoch=355, lrate=0.010, error=0.917\n",
      ">epoch=356, lrate=0.010, error=0.916\n",
      ">epoch=357, lrate=0.010, error=0.915\n",
      ">epoch=358, lrate=0.010, error=0.914\n",
      ">epoch=359, lrate=0.010, error=0.913\n",
      ">epoch=360, lrate=0.010, error=0.912\n",
      ">epoch=361, lrate=0.010, error=0.911\n",
      ">epoch=362, lrate=0.010, error=0.910\n",
      ">epoch=363, lrate=0.010, error=0.909\n",
      ">epoch=364, lrate=0.010, error=0.908\n",
      ">epoch=365, lrate=0.010, error=0.907\n",
      ">epoch=366, lrate=0.010, error=0.906\n",
      ">epoch=367, lrate=0.010, error=0.905\n",
      ">epoch=368, lrate=0.010, error=0.904\n",
      ">epoch=369, lrate=0.010, error=0.904\n",
      ">epoch=370, lrate=0.010, error=0.903\n",
      ">epoch=371, lrate=0.010, error=0.902\n",
      ">epoch=372, lrate=0.010, error=0.901\n",
      ">epoch=373, lrate=0.010, error=0.900\n",
      ">epoch=374, lrate=0.010, error=0.899\n",
      ">epoch=375, lrate=0.010, error=0.898\n",
      ">epoch=376, lrate=0.010, error=0.898\n",
      ">epoch=377, lrate=0.010, error=0.897\n",
      ">epoch=378, lrate=0.010, error=0.896\n",
      ">epoch=379, lrate=0.010, error=0.895\n",
      ">epoch=380, lrate=0.010, error=0.894\n",
      ">epoch=381, lrate=0.010, error=0.893\n",
      ">epoch=382, lrate=0.010, error=0.893\n",
      ">epoch=383, lrate=0.010, error=0.892\n",
      ">epoch=384, lrate=0.010, error=0.891\n",
      ">epoch=385, lrate=0.010, error=0.890\n",
      ">epoch=386, lrate=0.010, error=0.890\n",
      ">epoch=387, lrate=0.010, error=0.889\n",
      ">epoch=388, lrate=0.010, error=0.888\n",
      ">epoch=389, lrate=0.010, error=0.887\n",
      ">epoch=390, lrate=0.010, error=0.887\n",
      ">epoch=391, lrate=0.010, error=0.886\n",
      ">epoch=392, lrate=0.010, error=0.885\n",
      ">epoch=393, lrate=0.010, error=0.884\n",
      ">epoch=394, lrate=0.010, error=0.884\n",
      ">epoch=395, lrate=0.010, error=0.883\n",
      ">epoch=396, lrate=0.010, error=0.882\n",
      ">epoch=397, lrate=0.010, error=0.881\n",
      ">epoch=398, lrate=0.010, error=0.881\n",
      ">epoch=399, lrate=0.010, error=0.880\n"
     ]
    }
   ],
   "source": [
    "data = pd.read_csv(r\"C:\\Users\\BDA\\Downloads\\2_5404680059514520677.csv\")\n",
    "data['Year'] = data['Year']-2017\n",
    "data_input = data.drop(columns=['Date'])\n",
    "data_input['Volume'] = data_input['Volume']/data_input['Volume'].max()\n",
    "N = Neural_Network()\n",
    "N.train(400,data_input.values,0.01)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country Code</th>\n",
       "      <th>Txn Code</th>\n",
       "      <th>Qtr</th>\n",
       "      <th>Year</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.214180</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.428359</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.642539</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0.856718</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.785325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.285573</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.499752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0.713932</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.642539</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.856718</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.356966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0.571145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.499752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.713932</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.928111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0.428359</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.356966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.571145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.785325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0.999504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.214180</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.428359</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.642539</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0.856718</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.785325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.285573</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.499752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0.713932</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.642539</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.856718</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>971</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0.714286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>973</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.642857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>974</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0.857143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>975</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0.357143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>976</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0.571429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>977</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>978</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0.714286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>979</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0.928571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>980</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0.428571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>981</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.357143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>982</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0.571429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>983</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0.785714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>984</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>985</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.214286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>986</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0.428571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>987</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0.642857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>988</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0.857143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>989</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.785714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>990</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0.285714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>991</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>992</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0.714286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>993</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.642857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>994</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0.857143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0.357143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0.571429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0.714286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0.928571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1000</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0.428571</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1001 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Country Code  Txn Code  Qtr  Year    Volume\n",
       "0                1         1    1     0  0.214180\n",
       "1                2         2    2     0  0.428359\n",
       "2                3         3    3     0  0.642539\n",
       "3                4         4    4     0  0.856718\n",
       "4                5         5    1     0  0.785325\n",
       "5                1         1    2     0  0.285573\n",
       "6                2         2    3     0  0.499752\n",
       "7                3         3    4     0  0.713932\n",
       "8                4         4    1     0  0.642539\n",
       "9                5         5    2     0  0.856718\n",
       "10               1         1    3     0  0.356966\n",
       "11               2         2    4     0  0.571145\n",
       "12               3         3    1     0  0.499752\n",
       "13               4         4    2     0  0.713932\n",
       "14               5         5    3     0  0.928111\n",
       "15               1         1    4     0  0.428359\n",
       "16               2         2    1     0  0.356966\n",
       "17               3         3    2     0  0.571145\n",
       "18               4         4    3     0  0.785325\n",
       "19               5         5    4     0  0.999504\n",
       "20               1         1    1     0  0.214180\n",
       "21               2         2    2     0  0.428359\n",
       "22               3         3    3     0  0.642539\n",
       "23               4         4    4     0  0.856718\n",
       "24               5         5    1     0  0.785325\n",
       "25               1         1    2     0  0.285573\n",
       "26               2         2    3     0  0.499752\n",
       "27               3         3    4     0  0.713932\n",
       "28               4         4    1     0  0.642539\n",
       "29               5         5    2     0  0.856718\n",
       "...            ...       ...  ...   ...       ...\n",
       "971              2         2    3     1  0.500000\n",
       "972              3         3    4     1  0.714286\n",
       "973              4         4    1     1  0.642857\n",
       "974              5         5    2     1  0.857143\n",
       "975              1         1    3     1  0.357143\n",
       "976              2         2    4     1  0.571429\n",
       "977              3         3    1     1  0.500000\n",
       "978              4         4    2     1  0.714286\n",
       "979              5         5    3     1  0.928571\n",
       "980              1         1    4     1  0.428571\n",
       "981              2         2    1     1  0.357143\n",
       "982              3         3    2     1  0.571429\n",
       "983              4         4    3     1  0.785714\n",
       "984              5         5    4     1  1.000000\n",
       "985              1         1    1     1  0.214286\n",
       "986              2         2    2     1  0.428571\n",
       "987              3         3    3     1  0.642857\n",
       "988              4         4    4     1  0.857143\n",
       "989              5         5    1     1  0.785714\n",
       "990              1         1    2     1  0.285714\n",
       "991              2         2    3     1  0.500000\n",
       "992              3         3    4     1  0.714286\n",
       "993              4         4    1     1  0.642857\n",
       "994              5         5    2     1  0.857143\n",
       "995              1         1    3     1  0.357143\n",
       "996              2         2    4     1  0.571429\n",
       "997              3         3    1     1  0.500000\n",
       "998              4         4    2     1  0.714286\n",
       "999              5         5    3     1  0.928571\n",
       "1000             1         1    4     1  0.428571\n",
       "\n",
       "[1001 rows x 5 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_input"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pred 0.6524758529672118\n",
      "real 0.642857\n"
     ]
    }
   ],
   "source": [
    "out, pred = N.forward_prop([4,4,1,0])\n",
    "print(\"pred\",pred)\n",
    "print(\"real\",0.642857 )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
